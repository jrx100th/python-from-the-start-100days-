280.

day 37

Advanced authentication
and use
POST, PUT, DELETE Requests
from requests module

using pixela API














281. HTTP Post Requests 

other types of requests 
like 
POST
PUT
DELETE

requests.put()
requests.post()
requests.delete()

get request 
asking for a particular piece of data 
and they give back to us (response)

post request
we give external system a piece of data
and dont care about the respinse other than it is successful or not
eg : 
save a piece of data in google sheets
using twitter api to post a tweet

put request
update piece of data in external system 

delete
deleting a piece of data in an external system


user params is just like a json
so in the post request we use json= user_params rather than the 
get and params 
response = requests.post(url=pixela_endpoint, json=user_params)
print(response.text)
it will give the response as a piece of text 

response.text will give 
{"message":"Success. Let's visit https://pixe.la/@****, it is your profile page!","isSuccess":true}
but 
status_code will give 200














282. Advanced Authentication using an HTTP Header
step 2 = creating a graph definition in pixela 

so here comes the request Header
like the user authentication to post stuff
X-Api-Key
or 
Authorization HTTP Header
are recomended
so that the API key isnt visible to others in logs or request sniffing

so for securing it lets use headers authentication 

kwargs or keywordargs wont be shown up untill we completely type it

graph_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs"

graph_config = {
    "id" : "******",
    "name" : "Active Coding",
    "unit" : "File Count",
    "type" : "int",
    "color": "momiji"
}

headers = {
    "X-USER-TOKEN" : TOKEN
}

response = requests.post(url=graph_endpoint, json=graph_config,headers=headers)
print(response.text)

now : {"message":"Success.","isSuccess":true}
without the headers
it will show there is no user with that name

https://pixe.la/v1/users/****/graphs/******.html
in this site the graph will be there
most probably it can be discovered from the profile page itself 

we can securely authenticate ourselves using a header 

GET = params
POST = json













283. Challenge Add a pixel to the habit tracker graph using a post request

pixel_creation_endpoint = "https://pixe.la/v1/users/****/graphs/******"
pixel_creation_params = {
    "date" : "20250806",
    "quantity" : "41",
}

response = requests.post(url=pixel_creation_endpoint, json=pixel_creation_params, headers=headers)
print(response.status_code)

pixel created just lets automate the date
reused the headers x_api_key










284. Auto filling the pixel
just changing the data
if it is in cloud then it will change the data automatically
but with the value(quantity) wont be changed 

today = datetime(year=2025, month=8, day=4)
# print(today.strftime("%Y%m%d"))

just this function
for more goto online docs lile w3schools 














285. How to use http put and delete requests 
spoiler : 
if you post a pixel quantity to 0 then it will be shown as if there is not activity on that day (0)
i mean we can change the existing value 

put will change a existing piece of data
and delete will delete the piece of data 

update a pixel = put

update_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs/{GRAPH_ID}/{today.strftime('%Y%m%d')}"
pix_put = {
    "quantity" : "3"
}
response = requests.put(url=update_endpoint,json=pix_put,headers=headers)
print(response.text)


just deleted a pixel like this
delete_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs/{GRAPH_ID}/{today.strftime('%Y%m%d')}"
response = requests.delete(url=delete_endpoint, headers=headers)
print(response.text)

and all of them needs headers
post and put = json
get = params
delete = not required 

now lets do something crazy
fil the graph for the last 300 days 
